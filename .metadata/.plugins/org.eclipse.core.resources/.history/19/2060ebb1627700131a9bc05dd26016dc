package com.example.schoolapp;

import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.TimeZone;

import org.json.JSONObject;

import android.net.Uri;
import android.os.Bundle;
import android.provider.CalendarContract;
import android.provider.CalendarContract.Calendars;
import android.provider.CalendarContract.Events;
import android.graphics.Color;
import android.graphics.drawable.ColorDrawable;
import android.app.ActionBar;
import android.app.Activity;
import android.content.ContentResolver;
import android.content.ContentValues;
import android.content.Intent;
import android.database.Cursor;
import android.view.Menu;
import android.view.View;
import android.widget.Toast;

public class Timetable extends Activity {

	
@Override
public void onCreate(Bundle savedInstanceState) {
	super.onCreate(savedInstanceState);
	setContentView(R.layout.acadcalender);
	
	
	ContentValues values = new ContentValues();
    values.put(
    Calendars.ACCOUNT_NAME,  "xyz@gmail.com");
    values.put(
          Calendars.ACCOUNT_TYPE,  CalendarContract.ACCOUNT_TYPE_LOCAL);
    values.put(
            Calendars.NAME,  "Test Calendar");

    values.put(
            Calendars.CALENDAR_DISPLAY_NAME,  "abc calendar");
    values.put(
          Calendars.CALENDAR_COLOR,  Color.YELLOW );
    values.put(
          Calendars.CALENDAR_ACCESS_LEVEL,  Calendars.CAL_ACCESS_OWNER);
    values.put(
            Calendars.OWNER_ACCOUNT,"xyz@gmail.com");
    values.put(
            Calendars.CALENDAR_TIME_ZONE, TimeZone.getDefault().getID());
    values.put(Calendars.VISIBLE, 1);
    Uri.Builder builder = 
          CalendarContract.Calendars.CONTENT_URI.buildUpon(); 
    builder.appendQueryParameter(
          Calendars.ACCOUNT_NAME,"xyz@gmail.com");
    builder.appendQueryParameter(
          Calendars.ACCOUNT_TYPE,  CalendarContract.ACCOUNT_TYPE_LOCAL);
    builder.appendQueryParameter(
          CalendarContract.CALLER_IS_SYNCADAPTER,  "true");
    Uri uri =this.cordova.getActivity().getContentResolver().insert(builder.build(), values);

    try {
        return calendarArray.put(new JSONObject().put("calendarURI", uri));
    } catch (JSONException e) {
        e.printStackTrace();
    }
    return null;
}


	
	
	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.timetable, menu);
		return true;
	}

}